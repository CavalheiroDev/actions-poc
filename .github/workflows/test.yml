name: 1 - Tests

on:
  pull_request:
    types: ["opened", "edited", "reopened", "synchronize", "ready_for_review"]

jobs:
  build:
    name: Build base image
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    outputs:
      test_image: ${{ steps.set-output.outputs.test_image }}
    steps:
      - name: Checkout to Tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build image
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          FILE=$(git diff --name-only origin/develop -- poetry.lock Dockerfile HEAD -- poetry.lock Dockerfile )
          echo $FILE
          if [ "$FILE" == "" ]; then
            echo "Imagem Atualizada!"
            TEST_IMAGE="ghcr.io/cavalheirodev/actions-poc-base:test"
          else
            docker login ghcr.io -u ${{ secrets.GHCR_USER }} -p ${{ secrets.GHCR_TOKEN }}
            docker build . -t ghcr.io/cavalheirodev/actions-poc-base:test-temp
            docker push ghcr.io/cavalheirodev/actions-poc-base:test-temp
            TEST_IMAGE="ghcr.io/cavalheirodev/actions-poc-base:test-temp"
          fi;
          echo "::set-output name=test_image::${TEST_IMAGE}"
  test:
    defaults:
      run:
        shell: bash
    name: Testando Aplicação
    runs-on: ubuntu-latest
    needs: build
    container:
      image: ${{ needs.build.outputs.test_image }}
      credentials:
        username: ${{ secrets.GHCR_USER }}
        password: ${{ secrets.GHCR_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: |
          poetry export -f requirements.txt -o requirements.txt --without-hashes
          pip uninstall poetry -y
          pip install -r requirements.txt

      - name: Running Test
        run: |
          echo "Rodando testes..."
          python main.py
